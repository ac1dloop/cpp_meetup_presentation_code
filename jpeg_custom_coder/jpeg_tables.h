#ifndef JPEG_TABLES_H
#define JPEG_TABLES_H

/**
 * @file jpeg_tables.h
 * @author your name (you@domain.com)
 * @brief
 * @version 0.1
 * @date 2023-04-10
 *
 * @copyright Copyright (c) 2023
 *
 * This file contains static Quantization and Huffman tables
 */

#include <stdint.h>

static const float aan_scales[] = {
    1.0f, 1.387039845f, 1.306562965f, 1.175875602f,
    1.0f, 0.785694958f, 0.541196100f, 0.275899379f};

// Almost no compression
static const uint8_t test_quantize_table[64] = {
    1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1};

// Irfanview tables
static const uint8_t irfan_q_table_luma[64] = {
    6, 4, 4, 6, 10, 16, 20, 24,
    5, 5, 6, 8, 10, 23, 24, 22,
    6, 5, 6, 10, 16, 23, 28, 22,
    6, 7, 9, 12, 20, 35, 32, 25,
    7, 9, 15, 22, 27, 44, 41, 31,
    10, 14, 22, 26, 32, 42, 45, 37,
    20, 26, 31, 35, 41, 48, 48, 40,
    29, 37, 38, 39, 45, 40, 41, 40};

static const uint8_t irfan_q_table_chroma[64] = {
    7, 7, 10, 19, 40, 40, 40, 40,
    7, 8, 10, 26, 40, 40, 40, 40,
    10, 10, 22, 40, 40, 40, 40, 40,
    19, 26, 40, 40, 40, 40, 40, 40,
    40, 40, 40, 40, 40, 40, 40, 40,
    40, 40, 40, 40, 40, 40, 40, 40,
    40, 40, 40, 40, 40, 40, 40, 40,
    40, 40, 40, 40, 40, 40, 40, 40};

// JPEG spec. default luma
static const uint8_t q_table_luma[64] = {
    16, 11, 10, 16, 24, 40, 51, 61,
    12, 12, 14, 19, 26, 58, 60, 55,
    14, 13, 16, 24, 40, 57, 69, 56,
    14, 17, 22, 29, 51, 87, 80, 62,
    18, 22, 37, 65, 68, 109, 103, 77,
    24, 35, 55, 64, 81, 104, 113, 92,
    49, 64, 78, 87, 103, 121, 120, 101,
    72, 92, 95, 98, 112, 100, 103, 199};

// JPEG spec. default chroma
static const uint8_t q_table_chroma[64] = {
    17,
    18,
    24,
    47,
    99,
    99,
    99,
    99,
    18,
    21,
    26,
    66,
    99,
    99,
    99,
    99,
    24,
    26,
    56,
    99,
    99,
    99,
    99,
    99,
    47,
    66,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
};

// zig-zag index in array
static const uint8_t zz_index[64] =
    {
        0,
        1,
        5,
        6,
        14,
        15,
        27,
        28,
        2,
        4,
        7,
        13,
        16,
        26,
        29,
        42,
        3,
        8,
        12,
        17,
        25,
        30,
        41,
        43,
        9,
        11,
        18,
        24,
        31,
        40,
        44,
        53,
        10,
        19,
        23,
        32,
        39,
        45,
        52,
        54,
        20,
        22,
        33,
        38,
        46,
        51,
        55,
        60,
        21,
        34,
        37,
        47,
        50,
        56,
        59,
        61,
        35,
        36,
        48,
        49,
        57,
        58,
        62,
        63,
};

// Number of 16 bit values for every code length. (K.3.3.1)
static const uint8_t tjei_default_ht_luma_dc_len[16] =
    {
        0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0};
// values
static const uint8_t tjei_default_ht_luma_dc[12] =
    {
        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};

// Number of 16 bit values for every code length. (K.3.3.1)
static const uint8_t tjei_default_ht_chroma_dc_len[16] =
    {
        0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0};
// values
static const uint8_t tjei_default_ht_chroma_dc[12] =
    {
        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};

static const uint8_t tjei_default_ht_luma_ac_len[16] =
    {
        0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 0x7d};
static const uint8_t tjei_default_ht_luma_ac[] =
    {
        0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12, 0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,
        0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xA1, 0x08, 0x23, 0x42, 0xB1, 0xC1, 0x15, 0x52, 0xD1, 0xF0,
        0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0A, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x25, 0x26, 0x27, 0x28,
        0x29, 0x2A, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,
        0x4A, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,
        0x6A, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,
        0x8A, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7,
        0xA8, 0xA9, 0xAA, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xC2, 0xC3, 0xC4, 0xC5,
        0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xE1, 0xE2,
        0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8,
        0xF9, 0xFA};

static const uint8_t tjei_default_ht_chroma_ac_len[16] =
    {
        0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 0x77};

static const uint8_t tjei_default_ht_chroma_ac[] =
    {
        0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21, 0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71,
        0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91, 0xA1, 0xB1, 0xC1, 0x09, 0x23, 0x33, 0x52, 0xF0,
        0x15, 0x62, 0x72, 0xD1, 0x0A, 0x16, 0x24, 0x34, 0xE1, 0x25, 0xF1, 0x17, 0x18, 0x19, 0x1A, 0x26,
        0x27, 0x28, 0x29, 0x2A, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
        0x49, 0x4A, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
        0x69, 0x6A, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
        0x88, 0x89, 0x8A, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0xA2, 0xA3, 0xA4, 0xA5,
        0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xC2, 0xC3,
        0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA,
        0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8,
        0xF9, 0xFA};

// Next in file are currently unused huffman tables, but they may be used for testing or educational purposes
static const uint16_t huffman_code_luma_dc[12] = {
    0, 2, 3, 4, 5, 6, 14, 30, 62, 126, 254, 510};

static const uint16_t huffman_code_chroma_dc[12] = {
    0, 1, 2, 6, 14, 30, 62, 126, 254, 510, 1022, 2046};

static const uint8_t huffman_code_luma_dc_len[12] = {
    2, 3, 3, 3, 3, 3, 4, 5, 6, 7, 8, 9};

static const uint16_t huffman_code_chroma_dc_len[12] = {
    2, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};

static const uint8_t huffman_code_luma_ac_len[255] = {
    4, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 11,
    2, 4, 5, 6, 6, 7, 7, 8,
    9, 9, 9, 10, 10, 11, 16, 16,
    2, 5, 8, 9, 10, 11, 12, 12,
    15, 16, 16, 16, 16, 16, 16, 16,
    3, 7, 10, 12, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    4, 9, 12, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    5, 11, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    7, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    8, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    10, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0};

static const uint8_t huffman_code_chroma_ac_len[255] = {
    2, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 10,
    2, 4, 5, 5, 6, 6, 7, 7,
    8, 9, 9, 9, 9, 11, 14, 15,
    3, 6, 8, 8, 9, 10, 11, 11,
    16, 16, 16, 16, 16, 16, 16, 16,
    4, 8, 10, 10, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    5, 9, 12, 12, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    5, 11, 15, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    6, 12, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    7, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    9, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    10, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    12, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0};

static const uint16_t huffman_code_luma_ac[255] = {
    10, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 2041,
    0, 12, 28, 58, 59, 122, 123, 250,
    504, 505, 506, 1017, 1018, 2040, 65515, 65525,
    1, 27, 249, 503, 1016, 2039, 4086, 4087,
    32704, 65470, 65479, 65488, 65497, 65506, 65516, 65526,
    4, 121, 1015, 4085, 65430, 65438, 65446, 65454,
    65462, 65471, 65480, 65489, 65498, 65507, 65517, 65527,
    11, 502, 4084, 65423, 65431, 65439, 65447, 65455,
    65463, 65472, 65481, 65490, 65499, 65508, 65518, 65528,
    26, 2038, 65417, 65424, 65432, 65440, 65448, 65456,
    65464, 65473, 65482, 65491, 65500, 65509, 65519, 65529,
    120, 65412, 65418, 65425, 65433, 65441, 65449, 65457,
    65465, 65474, 65483, 65492, 65501, 65510, 65520, 65530,
    248, 65413, 65419, 65426, 65434, 65442, 65450, 65458,
    65466, 65475, 65484, 65493, 65502, 65511, 65521, 65531,
    1014, 65414, 65420, 65427, 65435, 65443, 65451, 65459,
    65467, 65476, 65485, 65494, 65503, 65512, 65522, 65532,
    65410, 65415, 65421, 65428, 65436, 65444, 65452, 65460,
    65468, 65477, 65486, 65495, 65504, 65513, 65523, 65533,
    65411, 65416, 65422, 65429, 65437, 65445, 65453, 65461,
    65469, 65478, 65487, 65496, 65505, 65514, 65524, 65534,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0};

// i - byte value to be coded. table[i] - code for this value
static const uint16_t huffman_code_chroma_ac[255] = {
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 1018,
    1, 11, 26, 27, 58, 59, 121, 122,
    249, 503, 504, 505, 506, 2041, 16352, 32707,
    4, 57, 247, 248, 502, 1017, 2039, 2040,
    65463, 65472, 65481, 65490, 65499, 65508, 65517, 65526,
    10, 246, 1015, 1016, 65431, 65439, 65447, 65455,
    65464, 65473, 65482, 65491, 65500, 65509, 65518, 65527,
    24, 501, 4086, 4087, 65432, 65440, 65448, 65456,
    65465, 65474, 65483, 65492, 65501, 65510, 65519, 65528,
    25, 2038, 32706, 65425, 65433, 65441, 65449, 65457,
    65466, 65475, 65484, 65493, 65502, 65511, 65520, 65529,
    56, 4085, 65420, 65426, 65434, 65442, 65450, 65458,
    65467, 65476, 65485, 65494, 65503, 65512, 65521, 65530,
    120, 65416, 65421, 65427, 65435, 65443, 65451, 65459,
    65468, 65477, 65486, 65495, 65504, 65513, 65522, 65531,
    500, 65417, 65422, 65428, 65436, 65444, 65452, 65460,
    65469, 65478, 65487, 65496, 65505, 65514, 65523, 65532,
    1014, 65418, 65423, 65429, 65437, 65445, 65453, 65461,
    65470, 65479, 65488, 65497, 65506, 65515, 65524, 65533,
    4084, 65419, 65424, 65430, 65438, 65446, 65454, 65462,
    65471, 65480, 65489, 65498, 65507, 65516, 65525, 65534,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0};

// SPECIFIC FOR WRITING
static const uint8_t huffsize_luma_dc[16] = {
    0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0};

static const uint8_t huffval_luma_dc[12] = {
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};

static const uint8_t huffsize_luma_ac[16] = {
    0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 125};

static const uint8_t huffsize_chroma_dc[16] = {
    0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0};

static const uint8_t huffisze_chroma_ac[16] = {
    0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 119};

static const uint8_t huffval_chroma_dc[12] = {
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};

static const uint8_t huffval_luma_ac[162] = {
    16, 32, 48, 0, 17, 64, 18, 33,
    80, 19, 20, 21, 22, 49, 96, 23,
    34, 112, 24, 25, 26, 35, 65, 27,
    28, 36, 50, 128, 15, 29, 37, 81,
    38, 39, 51, 66, 40, 30, 31, 41,
    42, 43, 44, 45, 46, 47, 52, 53,
    54, 55, 56, 57, 58, 59, 60, 61,
    62, 63, 67, 68, 69, 70, 71, 72,
    73, 74, 75, 76, 77, 78, 79, 82,
    83, 84, 85, 86, 87, 88, 89, 90,
    91, 92, 93, 94, 95, 97, 98, 99,
    100, 101, 102, 103, 104, 105, 106, 107,
    108, 109, 110, 111, 113, 114, 115, 116,
    117, 118, 119, 120, 121, 122, 123, 124,
    125, 126, 127, 129, 130, 131, 132, 133,
    134, 135, 136, 137, 138, 139, 140, 141,
    142, 143, 144, 145, 146, 147, 148, 149,
    150, 151, 152, 153, 154, 155, 156, 157,
    158, 159, 160, 161, 162, 163, 164, 165,
    166, 167, 168, 169, 170, 171, 172, 173,
    174, 175};

static const uint8_t huffval_chroma_ac[162] = {
    0, 16, 32, 17, 48, 18, 19, 64,
    80, 20, 21, 33, 96, 22, 23, 112,
    24, 34, 35, 49, 25, 26, 27, 28,
    36, 65, 128, 15, 37, 50, 51, 144,
    29, 38, 39, 81, 66, 67, 97, 160,
    30, 31, 82, 40, 41, 42, 43, 44,
    45, 46, 47, 52, 53, 54, 55, 56,
    57, 58, 59, 60, 61, 62, 63, 68,
    69, 70, 71, 72, 73, 74, 75, 76,
    77, 78, 79, 83, 84, 85, 86, 87,
    88, 89, 90, 91, 92, 93, 94, 95,
    98, 99, 100, 101, 102, 103, 104, 105,
    106, 107, 108, 109, 110, 111, 113, 114,
    115, 116, 117, 118, 119, 120, 121, 122,
    123, 124, 125, 126, 127, 129, 130, 131,
    132, 133, 134, 135, 136, 137, 138, 139,
    140, 141, 142, 143, 145, 146, 147, 148,
    149, 150, 151, 152, 153, 154, 155, 156,
    157, 158, 159, 161, 162, 163, 164, 165,
    166, 167, 168, 169, 170, 171, 172, 173,
    174, 175};

#endif // JPEG_TABLES_H